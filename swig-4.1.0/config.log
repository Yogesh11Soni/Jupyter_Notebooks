This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by swig configure 4.1.0, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  $ ./configure --prefix=/home/jupyter_notebooks/swig-4.1.0

## --------- ##
## Platform. ##
## --------- ##

hostname = trantor461
uname -m = x86_64
uname -r = 5.15.0-52-generic
uname -s = Linux
uname -v = #58~20.04.1-Ubuntu SMP Thu Oct 13 13:09:46 UTC 2022

/usr/bin/uname -p = x86_64
/bin/uname -X     = unknown

/bin/arch              = x86_64
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /home/yogeshsoni/miniconda3/bin/
PATH: /home/yogeshsoni/miniconda3/condabin/
PATH: /home/yogeshsoni/.nvm/versions/node/v14.10.0/bin/
PATH: /home/yogeshsoni/.local/bin/
PATH: /usr/local/sbin/
PATH: /usr/local/bin/
PATH: /usr/sbin/
PATH: /usr/bin/
PATH: /sbin/
PATH: /bin/
PATH: /usr/games/
PATH: /usr/local/games/
PATH: /snap/bin/


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2941: looking for aux files: compile missing install-sh config.guess config.sub
configure:2954:  trying ./Tools/config/
configure:2983:   ./Tools/config/compile found
configure:2983:   ./Tools/config/missing found
configure:2965:   ./Tools/config/install-sh found
configure:2983:   ./Tools/config/config.guess found
configure:2983:   ./Tools/config/config.sub found
configure:3107: checking build system type
configure:3122: result: x86_64-pc-linux-gnu
configure:3142: checking host system type
configure:3156: result: x86_64-pc-linux-gnu
configure:3193: checking for a BSD-compatible install
configure:3266: result: /usr/bin/install -c
configure:3277: checking whether build environment is sane
configure:3332: result: yes
configure:3489: checking for a race-free mkdir -p
configure:3533: result: /usr/bin/mkdir -p
configure:3540: checking for gawk
configure:3575: result: no
configure:3540: checking for mawk
configure:3561: found /usr/bin/mawk
configure:3572: result: mawk
configure:3583: checking whether make sets $(MAKE)
configure:3606: result: yes
configure:3636: checking whether make supports nested variables
configure:3654: result: yes
configure:3855: checking for gcc
configure:3876: found /usr/bin/gcc
configure:3887: result: gcc
configure:4240: checking for C compiler version
configure:4249: gcc --version >&5
gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
Copyright (C) 2019 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:4260: $? = 0
configure:4249: gcc -v >&5
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) 
configure:4260: $? = 0
configure:4249: gcc -V >&5
gcc: error: unrecognized command line option '-V'
gcc: fatal error: no input files
compilation terminated.
configure:4260: $? = 1
configure:4249: gcc -qversion >&5
gcc: error: unrecognized command line option '-qversion'; did you mean '--version'?
gcc: fatal error: no input files
compilation terminated.
configure:4260: $? = 1
configure:4249: gcc -version >&5
gcc: error: unrecognized command line option '-version'
gcc: fatal error: no input files
compilation terminated.
configure:4260: $? = 1
configure:4280: checking whether the C compiler works
configure:4302: gcc    conftest.c  >&5
configure:4306: $? = 0
configure:4356: result: yes
configure:4359: checking for C compiler default output file name
configure:4361: result: a.out
configure:4367: checking for suffix of executables
configure:4374: gcc -o conftest    conftest.c  >&5
configure:4378: $? = 0
configure:4401: result: 
configure:4423: checking whether we are cross compiling
configure:4431: gcc -o conftest    conftest.c  >&5
configure:4435: $? = 0
configure:4442: ./conftest
configure:4446: $? = 0
configure:4434: result: no
configure:4439: checking for suffix of object files
configure:4462: gcc -c   conftest.c >&5
configure:4466: $? = 0
configure:4488: result: o
configure:4492: checking whether the compiler supports GNU C
configure:4512: gcc -c   conftest.c >&5
configure:4512: $? = 0
configure:4522: result: yes
configure:4533: checking whether gcc accepts -g
configure:4554: gcc -c -g  conftest.c >&5
configure:4554: $? = 0
configure:4598: result: yes
configure:4618: checking for gcc option to enable C11 features
configure:4633: gcc  -c -g -O2  conftest.c >&5
configure:4633: $? = 0
configure:4651: result: none needed
configure:4767: checking whether gcc understands -c and -o together
configure:4790: gcc -c conftest.c -o conftest2.o
configure:4793: $? = 0
configure:4790: gcc -c conftest.c -o conftest2.o
configure:4793: $? = 0
configure:4805: result: yes
configure:4825: checking whether make supports the include directive
configure:4840: make -f confmf.GNU && cat confinc.out
this is the am__doit target
configure:4843: $? = 0
configure:4862: result: yes (GNU style)
configure:4888: checking dependency style of gcc
configure:5000: result: gcc3
configure:5084: checking for g++
configure:5105: found /usr/bin/g++
configure:5116: result: g++
configure:5143: checking for C++ compiler version
configure:5152: g++ --version >&5
g++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
Copyright (C) 2019 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:5163: $? = 0
configure:5152: g++ -v >&5
Using built-in specs.
COLLECT_GCC=g++
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) 
configure:5163: $? = 0
configure:5152: g++ -V >&5
g++: error: unrecognized command line option '-V'
g++: fatal error: no input files
compilation terminated.
configure:5163: $? = 1
configure:5152: g++ -qversion >&5
g++: error: unrecognized command line option '-qversion'; did you mean '--version'?
g++: fatal error: no input files
compilation terminated.
configure:5163: $? = 1
configure:5167: checking whether the compiler supports GNU C++
configure:5187: g++ -c   conftest.cpp >&5
configure:5187: $? = 0
configure:5197: result: yes
configure:5208: checking whether g++ accepts -g
configure:5229: g++ -c -g  conftest.cpp >&5
configure:5229: $? = 0
configure:5273: result: yes
configure:5293: checking for g++ option to enable C++11 features
configure:5308: g++  -c -g -O2  conftest.cpp >&5
configure:5308: $? = 0
configure:5326: result: none needed
configure:5392: checking dependency style of g++
configure:5504: result: gcc3
configure:5522: checking maximum warning verbosity option
configure:5561: result: -Wall -W -pedantic for C++ -Wall -W -pedantic for C
configure:5567: checking CFLAGS to compile SWIG executable
configure:5569: result: -g -O2 -Wall -W -pedantic
configure:5571: checking CXXFLAGS to compile SWIG executable
configure:5573: result: -g -O2 -Wall -W -pedantic
configure:5584: checking for grep that handles long lines and -e
configure:5648: result: /usr/bin/grep
configure:5653: checking for egrep
configure:5721: result: /usr/bin/grep -E
configure:5739: checking for popen
configure:5739: gcc -o conftest -g -O2 -Wall -W -pedantic   conftest.c  >&5
configure:5739: $? = 0
configure:5739: result: yes
configure:5762: checking whether to enable PCRE2 support
configure:5764: result: yes
configure:5768: checking whether to use local PCRE2
configure:5777: result: no
configure:5780: checking for a sed that does not truncate output
configure:5850: result: /home/yogeshsoni/miniconda3/bin/sed
configure:5928: checking for pcre2-config
configure:5951: found /home/yogeshsoni/miniconda3/bin/pcre2-config
configure:5963: result: /home/yogeshsoni/miniconda3/bin/pcre2-config
configure:6139: checking whether to enable ccache-swig
configure:6141: result: yes
configure:6163: checking for bison
configure:6198: result: no
configure:6163: checking for byacc
configure:6198: result: no
configure:6364: checking for boostlib >=  (102000)
configure:6396: g++ -c -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include  conftest.cpp >&5
conftest.cpp:16:10: fatal error: boost/version.hpp: No such file or directory
   16 | #include <boost/version.hpp>
      |          ^~~~~~~~~~~~~~~~~~~
compilation terminated.
configure:6396: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| /* end confdefs.h.  */
| 
| #include <boost/version.hpp>
| 
| int
| main (void)
| {
| 
| (void) ((void)sizeof(char[1 - 2*!!((BOOST_VERSION) < (102000))]));
| 
|   ;
|   return 0;
| }
configure:6516: g++ -c -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include -I/include/boost-0 conftest.cpp >&5
conftest.cpp:16:10: fatal error: boost/version.hpp: No such file or directory
   16 | #include <boost/version.hpp>
      |          ^~~~~~~~~~~~~~~~~~~
compilation terminated.
configure:6516: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| /* end confdefs.h.  */
| 
| #include <boost/version.hpp>
| 
| int
| main (void)
| {
| 
| (void) ((void)sizeof(char[1 - 2*!!((BOOST_VERSION) < (102000))]));
| 
|   ;
|   return 0;
| }
configure:6536: We could not detect the boost libraries (version  or higher). If you have a staged boost library (still not installed) please specify $BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.
configure:6564: checking SO
configure:6575: result: .so
configure:6582: checking LDSHARED
configure:6631: result: $(CC) -shared
configure:6637: checking CXXSHARED
configure:6643: result: $(CC) -shared
configure:6647: checking TRYLINKINGWITHCXX
configure:6672: result: CXXSHARED= $(CXX) -shared 
configure:6676: checking CCSHARED
configure:6697: result: -fpic
configure:6701: checking RPATH
configure:6712: result: -Xlinker -rpath $(exec_prefix)/lib -Xlinker -rpath .
configure:6718: checking LINKFORSHARED
configure:6732: result: -Xlinker -export-dynamic
configure:6736: checking CFLAGS to use for testing (PLATCFLAGS)
configure:6747: result: 
configure:6759: checking whether to attempt to enable C++11 and later C++ standards testing
configure:6761: result: yes
configure:6787: checking whether g++ supports C++20 features with -std=c++20
configure:7610: g++ -std=c++20 -c -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include conftest.cpp >&5
g++: error: unrecognized command line option '-std=c++20'; did you mean '-std=c++2a'?
configure:7610: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| /* end confdefs.h.  */
| 
| 
| // If the compiler admits that it is not ready for C++11, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201103L
| 
| #error "This is not a C++11 compiler"
| 
| #else
| 
| namespace cxx11
| {
| 
|   namespace test_static_assert
|   {
| 
|     template <typename T>
|     struct check
|     {
|       static_assert(sizeof(int) <= sizeof(T), "not big enough");
|     };
| 
|   }
| 
|   namespace test_final_override
|   {
| 
|     struct Base
|     {
|       virtual ~Base() {}
|       virtual void f() {}
|     };
| 
|     struct Derived : public Base
|     {
|       virtual ~Derived() override {}
|       virtual void f() override {}
|     };
| 
|   }
| 
|   namespace test_double_right_angle_brackets
|   {
| 
|     template < typename T >
|     struct check {};
| 
|     typedef check<void> single_type;
|     typedef check<check<void>> double_type;
|     typedef check<check<check<void>>> triple_type;
|     typedef check<check<check<check<void>>>> quadruple_type;
| 
|   }
| 
|   namespace test_decltype
|   {
| 
|     int
|     f()
|     {
|       int a = 1;
|       decltype(a) b = 2;
|       return a + b;
|     }
| 
|   }
| 
|   namespace test_type_deduction
|   {
| 
|     template < typename T1, typename T2 >
|     struct is_same
|     {
|       static const bool value = false;
|     };
| 
|     template < typename T >
|     struct is_same<T, T>
|     {
|       static const bool value = true;
|     };
| 
|     template < typename T1, typename T2 >
|     auto
|     add(T1 a1, T2 a2) -> decltype(a1 + a2)
|     {
|       return a1 + a2;
|     }
| 
|     int
|     test(const int c, volatile int v)
|     {
|       static_assert(is_same<int, decltype(0)>::value == true, "");
|       static_assert(is_same<int, decltype(c)>::value == false, "");
|       static_assert(is_same<int, decltype(v)>::value == false, "");
|       auto ac = c;
|       auto av = v;
|       auto sumi = ac + av + 'x';
|       auto sumf = ac + av + 1.0;
|       static_assert(is_same<int, decltype(ac)>::value == true, "");
|       static_assert(is_same<int, decltype(av)>::value == true, "");
|       static_assert(is_same<int, decltype(sumi)>::value == true, "");
|       static_assert(is_same<int, decltype(sumf)>::value == false, "");
|       static_assert(is_same<int, decltype(add(c, v))>::value == true, "");
|       return (sumf > 0.0) ? sumi : add(c, v);
|     }
| 
|   }
| 
|   namespace test_noexcept
|   {
| 
|     int f() { return 0; }
|     int g() noexcept { return 0; }
| 
|     static_assert(noexcept(f()) == false, "");
|     static_assert(noexcept(g()) == true, "");
| 
|   }
| 
|   namespace test_constexpr
|   {
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c_r(const CharT *const s, const unsigned long acc) noexcept
|     {
|       return *s ? strlen_c_r(s + 1, acc + 1) : acc;
|     }
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c(const CharT *const s) noexcept
|     {
|       return strlen_c_r(s, 0UL);
|     }
| 
|     static_assert(strlen_c("") == 0UL, "");
|     static_assert(strlen_c("1") == 1UL, "");
|     static_assert(strlen_c("example") == 7UL, "");
|     static_assert(strlen_c("another\0example") == 7UL, "");
| 
|   }
| 
|   namespace test_rvalue_references
|   {
| 
|     template < int N >
|     struct answer
|     {
|       static constexpr int value = N;
|     };
| 
|     answer<1> f(int&)       { return answer<1>(); }
|     answer<2> f(const int&) { return answer<2>(); }
|     answer<3> f(int&&)      { return answer<3>(); }
| 
|     void
|     test()
|     {
|       int i = 0;
|       const int c = 0;
|       static_assert(decltype(f(i))::value == 1, "");
|       static_assert(decltype(f(c))::value == 2, "");
|       static_assert(decltype(f(0))::value == 3, "");
|     }
| 
|   }
| 
|   namespace test_uniform_initialization
|   {
| 
|     struct test
|     {
|       static const int zero {};
|       static const int one {1};
|     };
| 
|     static_assert(test::zero == 0, "");
|     static_assert(test::one == 1, "");
| 
|   }
| 
|   namespace test_lambdas
|   {
| 
|     void
|     test1()
|     {
|       auto lambda1 = [](){};
|       auto lambda2 = lambda1;
|       lambda1();
|       lambda2();
|     }
| 
|     int
|     test2()
|     {
|       auto a = [](int i, int j){ return i + j; }(1, 2);
|       auto b = []() -> int { return '0'; }();
|       auto c = [=](){ return a + b; }();
|       auto d = [&](){ return c; }();
|       auto e = [a, &b](int x) mutable {
|         const auto identity = [](int y){ return y; };
|         for (auto i = 0; i < a; ++i)
|           a += b--;
|         return x + identity(a + b);
|       }(0);
|       return a + b + c + d + e;
|     }
| 
|     int
|     test3()
|     {
|       const auto nullary = [](){ return 0; };
|       const auto unary = [](int x){ return x; };
|       using nullary_t = decltype(nullary);
|       using unary_t = decltype(unary);
|       const auto higher1st = [](nullary_t f){ return f(); };
|       const auto higher2nd = [unary](nullary_t f1){
|         return [unary, f1](unary_t f2){ return f2(unary(f1())); };
|       };
|       return higher1st(nullary) + higher2nd(nullary)(unary);
|     }
| 
|   }
| 
|   namespace test_variadic_templates
|   {
| 
|     template <int...>
|     struct sum;
| 
|     template <int N0, int... N1toN>
|     struct sum<N0, N1toN...>
|     {
|       static constexpr auto value = N0 + sum<N1toN...>::value;
|     };
| 
|     template <>
|     struct sum<>
|     {
|       static constexpr auto value = 0;
|     };
| 
|     static_assert(sum<>::value == 0, "");
|     static_assert(sum<1>::value == 1, "");
|     static_assert(sum<23>::value == 23, "");
|     static_assert(sum<1, 2>::value == 3, "");
|     static_assert(sum<5, 5, 11>::value == 21, "");
|     static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, "");
| 
|   }
| 
|   // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae
|   // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function
|   // because of this.
|   namespace test_template_alias_sfinae
|   {
| 
|     struct foo {};
| 
|     template<typename T>
|     using member = typename T::member_type;
| 
|     template<typename T>
|     void func(...) {}
| 
|     template<typename T>
|     void func(member<T>*) {}
| 
|     void test();
| 
|     void test() { func<foo>(0); }
| 
|   }
| 
| }  // namespace cxx11
| 
| #endif  // __cplusplus >= 201103L
| 
| 
| 
| 
| // If the compiler admits that it is not ready for C++14, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201402L
| 
| #error "This is not a C++14 compiler"
| 
| #else
| 
| namespace cxx14
| {
| 
|   namespace test_polymorphic_lambdas
|   {
| 
|     int
|     test()
|     {
|       const auto lambda = [](auto&&... args){
|         const auto istiny = [](auto x){
|           return (sizeof(x) == 1UL) ? 1 : 0;
|         };
|         const int aretiny[] = { istiny(args)... };
|         return aretiny[0];
|       };
|       return lambda(1, 1L, 1.0f, '1');
|     }
| 
|   }
| 
|   namespace test_binary_literals
|   {
| 
|     constexpr auto ivii = 0b0000000000101010;
|     static_assert(ivii == 42, "wrong value");
| 
|   }
| 
|   namespace test_generalized_constexpr
|   {
| 
|     template < typename CharT >
|     constexpr unsigned long
|     strlen_c(const CharT *const s) noexcept
|     {
|       auto length = 0UL;
|       for (auto p = s; *p; ++p)
|         ++length;
|       return length;
|     }
| 
|     static_assert(strlen_c("") == 0UL, "");
|     static_assert(strlen_c("x") == 1UL, "");
|     static_assert(strlen_c("test") == 4UL, "");
|     static_assert(strlen_c("another\0test") == 7UL, "");
| 
|   }
| 
|   namespace test_lambda_init_capture
|   {
| 
|     int
|     test()
|     {
|       auto x = 0;
|       const auto lambda1 = [a = x](int b){ return a + b; };
|       const auto lambda2 = [a = lambda1(x)](){ return a; };
|       return lambda2();
|     }
| 
|   }
| 
|   namespace test_digit_separators
|   {
| 
|     constexpr auto ten_million = 100'000'000;
|     static_assert(ten_million == 100000000, "");
| 
|   }
| 
|   namespace test_return_type_deduction
|   {
| 
|     auto f(int& x) { return x; }
|     decltype(auto) g(int& x) { return x; }
| 
|     template < typename T1, typename T2 >
|     struct is_same
|     {
|       static constexpr auto value = false;
|     };
| 
|     template < typename T >
|     struct is_same<T, T>
|     {
|       static constexpr auto value = true;
|     };
| 
|     int
|     test()
|     {
|       auto x = 0;
|       static_assert(is_same<int, decltype(f(x))>::value, "");
|       static_assert(is_same<int&, decltype(g(x))>::value, "");
|       return x;
|     }
| 
|   }
| 
| }  // namespace cxx14
| 
| #endif  // __cplusplus >= 201402L
| 
| 
| 
| 
| // If the compiler admits that it is not ready for C++17, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201703L
| 
| #error "This is not a C++17 compiler"
| 
| #else
| 
| #include <initializer_list>
| #include <utility>
| #include <type_traits>
| 
| namespace cxx17
| {
| 
|   namespace test_constexpr_lambdas
|   {
| 
|     constexpr int foo = [](){return 42;}();
| 
|   }
| 
|   namespace test::nested_namespace::definitions
|   {
| 
|   }
| 
|   namespace test_fold_expression
|   {
| 
|     template<typename... Args>
|     int multiply(Args... args)
|     {
|       return (args * ... * 1);
|     }
| 
|     template<typename... Args>
|     bool all(Args... args)
|     {
|       return (args && ...);
|     }
| 
|   }
| 
|   namespace test_extended_static_assert
|   {
| 
|     static_assert (true);
| 
|   }
| 
|   namespace test_auto_brace_init_list
|   {
| 
|     auto foo = {5};
|     auto bar {5};
| 
|     static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);
|     static_assert(std::is_same<int, decltype(bar)>::value);
|   }
| 
|   namespace test_typename_in_template_template_parameter
|   {
| 
|     template<template<typename> typename X> struct D;
| 
|   }
| 
|   namespace test_fallthrough_nodiscard_maybe_unused_attributes
|   {
| 
|     int f1()
|     {
|       return 42;
|     }
| 
|     [[nodiscard]] int f2()
|     {
|       [[maybe_unused]] auto unused = f1();
| 
|       switch (f1())
|       {
|       case 17:
|         f1();
|         [[fallthrough]];
|       case 42:
|         f1();
|       }
|       return f1();
|     }
| 
|   }
| 
|   namespace test_extended_aggregate_initialization
|   {
| 
|     struct base1
|     {
|       int b1, b2 = 42;
|     };
| 
|     struct base2
|     {
|       base2() {
|         b3 = 42;
|       }
|       int b3;
|     };
| 
|     struct derived : base1, base2
|     {
|         int d;
|     };
| 
|     derived d1 {{1, 2}, {}, 4};  // full initialization
|     derived d2 {{}, {}, 4};      // value-initialized bases
| 
|   }
| 
|   namespace test_general_range_based_for_loop
|   {
| 
|     struct iter
|     {
|       int i;
| 
|       int& operator* ()
|       {
|         return i;
|       }
| 
|       const int& operator* () const
|       {
|         return i;
|       }
| 
|       iter& operator++()
|       {
|         ++i;
|         return *this;
|       }
|     };
| 
|     struct sentinel
|     {
|       int i;
|     };
| 
|     bool operator== (const iter& i, const sentinel& s)
|     {
|       return i.i == s.i;
|     }
| 
|     bool operator!= (const iter& i, const sentinel& s)
|     {
|       return !(i == s);
|     }
| 
|     struct range
|     {
|       iter begin() const
|       {
|         return {0};
|       }
| 
|       sentinel end() const
|       {
|         return {5};
|       }
|     };
| 
|     void f()
|     {
|       range r {};
| 
|       for (auto i : r)
|       {
|         [[maybe_unused]] auto v = i;
|       }
|     }
| 
|   }
| 
|   namespace test_lambda_capture_asterisk_this_by_value
|   {
| 
|     struct t
|     {
|       int i;
|       int foo()
|       {
|         return [*this]()
|         {
|           return i;
|         }();
|       }
|     };
| 
|   }
| 
|   namespace test_enum_class_construction
|   {
| 
|     enum class byte : unsigned char
|     {};
| 
|     byte foo {42};
| 
|   }
| 
|   namespace test_constexpr_if
|   {
| 
|     template <bool cond>
|     int f ()
|     {
|       if constexpr(cond)
|       {
|         return 13;
|       }
|       else
|       {
|         return 42;
|       }
|     }
| 
|   }
| 
|   namespace test_selection_statement_with_initializer
|   {
| 
|     int f()
|     {
|       return 13;
|     }
| 
|     int f2()
|     {
|       if (auto i = f(); i > 0)
|       {
|         return 3;
|       }
| 
|       switch (auto i = f(); i + 4)
|       {
|       case 17:
|         return 2;
| 
|       default:
|         return 1;
|       }
|     }
| 
|   }
| 
|   namespace test_template_argument_deduction_for_class_templates
|   {
| 
|     template <typename T1, typename T2>
|     struct pair
|     {
|       pair (T1 p1, T2 p2)
|         : m1 {p1},
|           m2 {p2}
|       {}
| 
|       T1 m1;
|       T2 m2;
|     };
| 
|     void f()
|     {
|       [[maybe_unused]] auto p = pair{13, 42u};
|     }
| 
|   }
| 
|   namespace test_non_type_auto_template_parameters
|   {
| 
|     template <auto n>
|     struct B
|     {};
| 
|     B<5> b1;
|     B<'a'> b2;
| 
|   }
| 
|   namespace test_structured_bindings
|   {
| 
|     int arr[2] = { 1, 2 };
|     std::pair<int, int> pr = { 1, 2 };
| 
|     auto f1() -> int(&)[2]
|     {
|       return arr;
|     }
| 
|     auto f2() -> std::pair<int, int>&
|     {
|       return pr;
|     }
| 
|     struct S
|     {
|       int x1 : 2;
|       volatile double y1;
|     };
| 
|     S f3()
|     {
|       return {};
|     }
| 
|     auto [ x1, y1 ] = f1();
|     auto& [ xr1, yr1 ] = f1();
|     auto [ x2, y2 ] = f2();
|     auto& [ xr2, yr2 ] = f2();
|     const auto [ x3, y3 ] = f3();
| 
|   }
| 
|   namespace test_exception_spec_type_system
|   {
| 
|     struct Good {};
|     struct Bad {};
| 
|     void g1() noexcept;
|     void g2();
| 
|     template<typename T>
|     Bad
|     f(T*, T*);
| 
|     template<typename T1, typename T2>
|     Good
|     f(T1*, T2*);
| 
|     static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);
| 
|   }
| 
|   namespace test_inline_variables
|   {
| 
|     template<class T> void f(T)
|     {}
| 
|     template<class T> inline T g(T)
|     {
|       return T{};
|     }
| 
|     template<> inline void f<>(int)
|     {}
| 
|     template<> int g<>(int)
|     {
|       return 5;
|     }
| 
|   }
| 
| }  // namespace cxx17
| 
| #endif  // __cplusplus < 201703L
| 
| 
| 
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 202002L
| 
| #error "This is not a C++20 compiler"
| 
| #else
| 
| #include <version>
| 
| namespace cxx20
| {
| 
| // As C++20 supports feature test macros in the standard, there is no
| // immediate need to actually test for feature availability on the
| // Autoconf side.
| 
| }  // namespace cxx20
| 
| #endif  // __cplusplus < 202002L
| 
| 
| 
configure:7620: result: no
configure:6787: checking whether g++ supports C++20 features with +std=c++20
configure:7610: g++ +std=c++20 -c -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include conftest.cpp >&5
g++: error: +std=c++20: No such file or directory
configure:7610: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| /* end confdefs.h.  */
| 
| 
| // If the compiler admits that it is not ready for C++11, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201103L
| 
| #error "This is not a C++11 compiler"
| 
| #else
| 
| namespace cxx11
| {
| 
|   namespace test_static_assert
|   {
| 
|     template <typename T>
|     struct check
|     {
|       static_assert(sizeof(int) <= sizeof(T), "not big enough");
|     };
| 
|   }
| 
|   namespace test_final_override
|   {
| 
|     struct Base
|     {
|       virtual ~Base() {}
|       virtual void f() {}
|     };
| 
|     struct Derived : public Base
|     {
|       virtual ~Derived() override {}
|       virtual void f() override {}
|     };
| 
|   }
| 
|   namespace test_double_right_angle_brackets
|   {
| 
|     template < typename T >
|     struct check {};
| 
|     typedef check<void> single_type;
|     typedef check<check<void>> double_type;
|     typedef check<check<check<void>>> triple_type;
|     typedef check<check<check<check<void>>>> quadruple_type;
| 
|   }
| 
|   namespace test_decltype
|   {
| 
|     int
|     f()
|     {
|       int a = 1;
|       decltype(a) b = 2;
|       return a + b;
|     }
| 
|   }
| 
|   namespace test_type_deduction
|   {
| 
|     template < typename T1, typename T2 >
|     struct is_same
|     {
|       static const bool value = false;
|     };
| 
|     template < typename T >
|     struct is_same<T, T>
|     {
|       static const bool value = true;
|     };
| 
|     template < typename T1, typename T2 >
|     auto
|     add(T1 a1, T2 a2) -> decltype(a1 + a2)
|     {
|       return a1 + a2;
|     }
| 
|     int
|     test(const int c, volatile int v)
|     {
|       static_assert(is_same<int, decltype(0)>::value == true, "");
|       static_assert(is_same<int, decltype(c)>::value == false, "");
|       static_assert(is_same<int, decltype(v)>::value == false, "");
|       auto ac = c;
|       auto av = v;
|       auto sumi = ac + av + 'x';
|       auto sumf = ac + av + 1.0;
|       static_assert(is_same<int, decltype(ac)>::value == true, "");
|       static_assert(is_same<int, decltype(av)>::value == true, "");
|       static_assert(is_same<int, decltype(sumi)>::value == true, "");
|       static_assert(is_same<int, decltype(sumf)>::value == false, "");
|       static_assert(is_same<int, decltype(add(c, v))>::value == true, "");
|       return (sumf > 0.0) ? sumi : add(c, v);
|     }
| 
|   }
| 
|   namespace test_noexcept
|   {
| 
|     int f() { return 0; }
|     int g() noexcept { return 0; }
| 
|     static_assert(noexcept(f()) == false, "");
|     static_assert(noexcept(g()) == true, "");
| 
|   }
| 
|   namespace test_constexpr
|   {
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c_r(const CharT *const s, const unsigned long acc) noexcept
|     {
|       return *s ? strlen_c_r(s + 1, acc + 1) : acc;
|     }
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c(const CharT *const s) noexcept
|     {
|       return strlen_c_r(s, 0UL);
|     }
| 
|     static_assert(strlen_c("") == 0UL, "");
|     static_assert(strlen_c("1") == 1UL, "");
|     static_assert(strlen_c("example") == 7UL, "");
|     static_assert(strlen_c("another\0example") == 7UL, "");
| 
|   }
| 
|   namespace test_rvalue_references
|   {
| 
|     template < int N >
|     struct answer
|     {
|       static constexpr int value = N;
|     };
| 
|     answer<1> f(int&)       { return answer<1>(); }
|     answer<2> f(const int&) { return answer<2>(); }
|     answer<3> f(int&&)      { return answer<3>(); }
| 
|     void
|     test()
|     {
|       int i = 0;
|       const int c = 0;
|       static_assert(decltype(f(i))::value == 1, "");
|       static_assert(decltype(f(c))::value == 2, "");
|       static_assert(decltype(f(0))::value == 3, "");
|     }
| 
|   }
| 
|   namespace test_uniform_initialization
|   {
| 
|     struct test
|     {
|       static const int zero {};
|       static const int one {1};
|     };
| 
|     static_assert(test::zero == 0, "");
|     static_assert(test::one == 1, "");
| 
|   }
| 
|   namespace test_lambdas
|   {
| 
|     void
|     test1()
|     {
|       auto lambda1 = [](){};
|       auto lambda2 = lambda1;
|       lambda1();
|       lambda2();
|     }
| 
|     int
|     test2()
|     {
|       auto a = [](int i, int j){ return i + j; }(1, 2);
|       auto b = []() -> int { return '0'; }();
|       auto c = [=](){ return a + b; }();
|       auto d = [&](){ return c; }();
|       auto e = [a, &b](int x) mutable {
|         const auto identity = [](int y){ return y; };
|         for (auto i = 0; i < a; ++i)
|           a += b--;
|         return x + identity(a + b);
|       }(0);
|       return a + b + c + d + e;
|     }
| 
|     int
|     test3()
|     {
|       const auto nullary = [](){ return 0; };
|       const auto unary = [](int x){ return x; };
|       using nullary_t = decltype(nullary);
|       using unary_t = decltype(unary);
|       const auto higher1st = [](nullary_t f){ return f(); };
|       const auto higher2nd = [unary](nullary_t f1){
|         return [unary, f1](unary_t f2){ return f2(unary(f1())); };
|       };
|       return higher1st(nullary) + higher2nd(nullary)(unary);
|     }
| 
|   }
| 
|   namespace test_variadic_templates
|   {
| 
|     template <int...>
|     struct sum;
| 
|     template <int N0, int... N1toN>
|     struct sum<N0, N1toN...>
|     {
|       static constexpr auto value = N0 + sum<N1toN...>::value;
|     };
| 
|     template <>
|     struct sum<>
|     {
|       static constexpr auto value = 0;
|     };
| 
|     static_assert(sum<>::value == 0, "");
|     static_assert(sum<1>::value == 1, "");
|     static_assert(sum<23>::value == 23, "");
|     static_assert(sum<1, 2>::value == 3, "");
|     static_assert(sum<5, 5, 11>::value == 21, "");
|     static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, "");
| 
|   }
| 
|   // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae
|   // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function
|   // because of this.
|   namespace test_template_alias_sfinae
|   {
| 
|     struct foo {};
| 
|     template<typename T>
|     using member = typename T::member_type;
| 
|     template<typename T>
|     void func(...) {}
| 
|     template<typename T>
|     void func(member<T>*) {}
| 
|     void test();
| 
|     void test() { func<foo>(0); }
| 
|   }
| 
| }  // namespace cxx11
| 
| #endif  // __cplusplus >= 201103L
| 
| 
| 
| 
| // If the compiler admits that it is not ready for C++14, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201402L
| 
| #error "This is not a C++14 compiler"
| 
| #else
| 
| namespace cxx14
| {
| 
|   namespace test_polymorphic_lambdas
|   {
| 
|     int
|     test()
|     {
|       const auto lambda = [](auto&&... args){
|         const auto istiny = [](auto x){
|           return (sizeof(x) == 1UL) ? 1 : 0;
|         };
|         const int aretiny[] = { istiny(args)... };
|         return aretiny[0];
|       };
|       return lambda(1, 1L, 1.0f, '1');
|     }
| 
|   }
| 
|   namespace test_binary_literals
|   {
| 
|     constexpr auto ivii = 0b0000000000101010;
|     static_assert(ivii == 42, "wrong value");
| 
|   }
| 
|   namespace test_generalized_constexpr
|   {
| 
|     template < typename CharT >
|     constexpr unsigned long
|     strlen_c(const CharT *const s) noexcept
|     {
|       auto length = 0UL;
|       for (auto p = s; *p; ++p)
|         ++length;
|       return length;
|     }
| 
|     static_assert(strlen_c("") == 0UL, "");
|     static_assert(strlen_c("x") == 1UL, "");
|     static_assert(strlen_c("test") == 4UL, "");
|     static_assert(strlen_c("another\0test") == 7UL, "");
| 
|   }
| 
|   namespace test_lambda_init_capture
|   {
| 
|     int
|     test()
|     {
|       auto x = 0;
|       const auto lambda1 = [a = x](int b){ return a + b; };
|       const auto lambda2 = [a = lambda1(x)](){ return a; };
|       return lambda2();
|     }
| 
|   }
| 
|   namespace test_digit_separators
|   {
| 
|     constexpr auto ten_million = 100'000'000;
|     static_assert(ten_million == 100000000, "");
| 
|   }
| 
|   namespace test_return_type_deduction
|   {
| 
|     auto f(int& x) { return x; }
|     decltype(auto) g(int& x) { return x; }
| 
|     template < typename T1, typename T2 >
|     struct is_same
|     {
|       static constexpr auto value = false;
|     };
| 
|     template < typename T >
|     struct is_same<T, T>
|     {
|       static constexpr auto value = true;
|     };
| 
|     int
|     test()
|     {
|       auto x = 0;
|       static_assert(is_same<int, decltype(f(x))>::value, "");
|       static_assert(is_same<int&, decltype(g(x))>::value, "");
|       return x;
|     }
| 
|   }
| 
| }  // namespace cxx14
| 
| #endif  // __cplusplus >= 201402L
| 
| 
| 
| 
| // If the compiler admits that it is not ready for C++17, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201703L
| 
| #error "This is not a C++17 compiler"
| 
| #else
| 
| #include <initializer_list>
| #include <utility>
| #include <type_traits>
| 
| namespace cxx17
| {
| 
|   namespace test_constexpr_lambdas
|   {
| 
|     constexpr int foo = [](){return 42;}();
| 
|   }
| 
|   namespace test::nested_namespace::definitions
|   {
| 
|   }
| 
|   namespace test_fold_expression
|   {
| 
|     template<typename... Args>
|     int multiply(Args... args)
|     {
|       return (args * ... * 1);
|     }
| 
|     template<typename... Args>
|     bool all(Args... args)
|     {
|       return (args && ...);
|     }
| 
|   }
| 
|   namespace test_extended_static_assert
|   {
| 
|     static_assert (true);
| 
|   }
| 
|   namespace test_auto_brace_init_list
|   {
| 
|     auto foo = {5};
|     auto bar {5};
| 
|     static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);
|     static_assert(std::is_same<int, decltype(bar)>::value);
|   }
| 
|   namespace test_typename_in_template_template_parameter
|   {
| 
|     template<template<typename> typename X> struct D;
| 
|   }
| 
|   namespace test_fallthrough_nodiscard_maybe_unused_attributes
|   {
| 
|     int f1()
|     {
|       return 42;
|     }
| 
|     [[nodiscard]] int f2()
|     {
|       [[maybe_unused]] auto unused = f1();
| 
|       switch (f1())
|       {
|       case 17:
|         f1();
|         [[fallthrough]];
|       case 42:
|         f1();
|       }
|       return f1();
|     }
| 
|   }
| 
|   namespace test_extended_aggregate_initialization
|   {
| 
|     struct base1
|     {
|       int b1, b2 = 42;
|     };
| 
|     struct base2
|     {
|       base2() {
|         b3 = 42;
|       }
|       int b3;
|     };
| 
|     struct derived : base1, base2
|     {
|         int d;
|     };
| 
|     derived d1 {{1, 2}, {}, 4};  // full initialization
|     derived d2 {{}, {}, 4};      // value-initialized bases
| 
|   }
| 
|   namespace test_general_range_based_for_loop
|   {
| 
|     struct iter
|     {
|       int i;
| 
|       int& operator* ()
|       {
|         return i;
|       }
| 
|       const int& operator* () const
|       {
|         return i;
|       }
| 
|       iter& operator++()
|       {
|         ++i;
|         return *this;
|       }
|     };
| 
|     struct sentinel
|     {
|       int i;
|     };
| 
|     bool operator== (const iter& i, const sentinel& s)
|     {
|       return i.i == s.i;
|     }
| 
|     bool operator!= (const iter& i, const sentinel& s)
|     {
|       return !(i == s);
|     }
| 
|     struct range
|     {
|       iter begin() const
|       {
|         return {0};
|       }
| 
|       sentinel end() const
|       {
|         return {5};
|       }
|     };
| 
|     void f()
|     {
|       range r {};
| 
|       for (auto i : r)
|       {
|         [[maybe_unused]] auto v = i;
|       }
|     }
| 
|   }
| 
|   namespace test_lambda_capture_asterisk_this_by_value
|   {
| 
|     struct t
|     {
|       int i;
|       int foo()
|       {
|         return [*this]()
|         {
|           return i;
|         }();
|       }
|     };
| 
|   }
| 
|   namespace test_enum_class_construction
|   {
| 
|     enum class byte : unsigned char
|     {};
| 
|     byte foo {42};
| 
|   }
| 
|   namespace test_constexpr_if
|   {
| 
|     template <bool cond>
|     int f ()
|     {
|       if constexpr(cond)
|       {
|         return 13;
|       }
|       else
|       {
|         return 42;
|       }
|     }
| 
|   }
| 
|   namespace test_selection_statement_with_initializer
|   {
| 
|     int f()
|     {
|       return 13;
|     }
| 
|     int f2()
|     {
|       if (auto i = f(); i > 0)
|       {
|         return 3;
|       }
| 
|       switch (auto i = f(); i + 4)
|       {
|       case 17:
|         return 2;
| 
|       default:
|         return 1;
|       }
|     }
| 
|   }
| 
|   namespace test_template_argument_deduction_for_class_templates
|   {
| 
|     template <typename T1, typename T2>
|     struct pair
|     {
|       pair (T1 p1, T2 p2)
|         : m1 {p1},
|           m2 {p2}
|       {}
| 
|       T1 m1;
|       T2 m2;
|     };
| 
|     void f()
|     {
|       [[maybe_unused]] auto p = pair{13, 42u};
|     }
| 
|   }
| 
|   namespace test_non_type_auto_template_parameters
|   {
| 
|     template <auto n>
|     struct B
|     {};
| 
|     B<5> b1;
|     B<'a'> b2;
| 
|   }
| 
|   namespace test_structured_bindings
|   {
| 
|     int arr[2] = { 1, 2 };
|     std::pair<int, int> pr = { 1, 2 };
| 
|     auto f1() -> int(&)[2]
|     {
|       return arr;
|     }
| 
|     auto f2() -> std::pair<int, int>&
|     {
|       return pr;
|     }
| 
|     struct S
|     {
|       int x1 : 2;
|       volatile double y1;
|     };
| 
|     S f3()
|     {
|       return {};
|     }
| 
|     auto [ x1, y1 ] = f1();
|     auto& [ xr1, yr1 ] = f1();
|     auto [ x2, y2 ] = f2();
|     auto& [ xr2, yr2 ] = f2();
|     const auto [ x3, y3 ] = f3();
| 
|   }
| 
|   namespace test_exception_spec_type_system
|   {
| 
|     struct Good {};
|     struct Bad {};
| 
|     void g1() noexcept;
|     void g2();
| 
|     template<typename T>
|     Bad
|     f(T*, T*);
| 
|     template<typename T1, typename T2>
|     Good
|     f(T1*, T2*);
| 
|     static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);
| 
|   }
| 
|   namespace test_inline_variables
|   {
| 
|     template<class T> void f(T)
|     {}
| 
|     template<class T> inline T g(T)
|     {
|       return T{};
|     }
| 
|     template<> inline void f<>(int)
|     {}
| 
|     template<> int g<>(int)
|     {
|       return 5;
|     }
| 
|   }
| 
| }  // namespace cxx17
| 
| #endif  // __cplusplus < 201703L
| 
| 
| 
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 202002L
| 
| #error "This is not a C++20 compiler"
| 
| #else
| 
| #include <version>
| 
| namespace cxx20
| {
| 
| // As C++20 supports feature test macros in the standard, there is no
| // immediate need to actually test for feature availability on the
| // Autoconf side.
| 
| }  // namespace cxx20
| 
| #endif  // __cplusplus < 202002L
| 
| 
| 
configure:7620: result: no
configure:6787: checking whether g++ supports C++20 features with -h std=c++20
configure:7610: g++ -h std=c++20 -c -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include conftest.cpp >&5
g++: error: unrecognized command line option '-h'
configure:7610: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| /* end confdefs.h.  */
| 
| 
| // If the compiler admits that it is not ready for C++11, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201103L
| 
| #error "This is not a C++11 compiler"
| 
| #else
| 
| namespace cxx11
| {
| 
|   namespace test_static_assert
|   {
| 
|     template <typename T>
|     struct check
|     {
|       static_assert(sizeof(int) <= sizeof(T), "not big enough");
|     };
| 
|   }
| 
|   namespace test_final_override
|   {
| 
|     struct Base
|     {
|       virtual ~Base() {}
|       virtual void f() {}
|     };
| 
|     struct Derived : public Base
|     {
|       virtual ~Derived() override {}
|       virtual void f() override {}
|     };
| 
|   }
| 
|   namespace test_double_right_angle_brackets
|   {
| 
|     template < typename T >
|     struct check {};
| 
|     typedef check<void> single_type;
|     typedef check<check<void>> double_type;
|     typedef check<check<check<void>>> triple_type;
|     typedef check<check<check<check<void>>>> quadruple_type;
| 
|   }
| 
|   namespace test_decltype
|   {
| 
|     int
|     f()
|     {
|       int a = 1;
|       decltype(a) b = 2;
|       return a + b;
|     }
| 
|   }
| 
|   namespace test_type_deduction
|   {
| 
|     template < typename T1, typename T2 >
|     struct is_same
|     {
|       static const bool value = false;
|     };
| 
|     template < typename T >
|     struct is_same<T, T>
|     {
|       static const bool value = true;
|     };
| 
|     template < typename T1, typename T2 >
|     auto
|     add(T1 a1, T2 a2) -> decltype(a1 + a2)
|     {
|       return a1 + a2;
|     }
| 
|     int
|     test(const int c, volatile int v)
|     {
|       static_assert(is_same<int, decltype(0)>::value == true, "");
|       static_assert(is_same<int, decltype(c)>::value == false, "");
|       static_assert(is_same<int, decltype(v)>::value == false, "");
|       auto ac = c;
|       auto av = v;
|       auto sumi = ac + av + 'x';
|       auto sumf = ac + av + 1.0;
|       static_assert(is_same<int, decltype(ac)>::value == true, "");
|       static_assert(is_same<int, decltype(av)>::value == true, "");
|       static_assert(is_same<int, decltype(sumi)>::value == true, "");
|       static_assert(is_same<int, decltype(sumf)>::value == false, "");
|       static_assert(is_same<int, decltype(add(c, v))>::value == true, "");
|       return (sumf > 0.0) ? sumi : add(c, v);
|     }
| 
|   }
| 
|   namespace test_noexcept
|   {
| 
|     int f() { return 0; }
|     int g() noexcept { return 0; }
| 
|     static_assert(noexcept(f()) == false, "");
|     static_assert(noexcept(g()) == true, "");
| 
|   }
| 
|   namespace test_constexpr
|   {
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c_r(const CharT *const s, const unsigned long acc) noexcept
|     {
|       return *s ? strlen_c_r(s + 1, acc + 1) : acc;
|     }
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c(const CharT *const s) noexcept
|     {
|       return strlen_c_r(s, 0UL);
|     }
| 
|     static_assert(strlen_c("") == 0UL, "");
|     static_assert(strlen_c("1") == 1UL, "");
|     static_assert(strlen_c("example") == 7UL, "");
|     static_assert(strlen_c("another\0example") == 7UL, "");
| 
|   }
| 
|   namespace test_rvalue_references
|   {
| 
|     template < int N >
|     struct answer
|     {
|       static constexpr int value = N;
|     };
| 
|     answer<1> f(int&)       { return answer<1>(); }
|     answer<2> f(const int&) { return answer<2>(); }
|     answer<3> f(int&&)      { return answer<3>(); }
| 
|     void
|     test()
|     {
|       int i = 0;
|       const int c = 0;
|       static_assert(decltype(f(i))::value == 1, "");
|       static_assert(decltype(f(c))::value == 2, "");
|       static_assert(decltype(f(0))::value == 3, "");
|     }
| 
|   }
| 
|   namespace test_uniform_initialization
|   {
| 
|     struct test
|     {
|       static const int zero {};
|       static const int one {1};
|     };
| 
|     static_assert(test::zero == 0, "");
|     static_assert(test::one == 1, "");
| 
|   }
| 
|   namespace test_lambdas
|   {
| 
|     void
|     test1()
|     {
|       auto lambda1 = [](){};
|       auto lambda2 = lambda1;
|       lambda1();
|       lambda2();
|     }
| 
|     int
|     test2()
|     {
|       auto a = [](int i, int j){ return i + j; }(1, 2);
|       auto b = []() -> int { return '0'; }();
|       auto c = [=](){ return a + b; }();
|       auto d = [&](){ return c; }();
|       auto e = [a, &b](int x) mutable {
|         const auto identity = [](int y){ return y; };
|         for (auto i = 0; i < a; ++i)
|           a += b--;
|         return x + identity(a + b);
|       }(0);
|       return a + b + c + d + e;
|     }
| 
|     int
|     test3()
|     {
|       const auto nullary = [](){ return 0; };
|       const auto unary = [](int x){ return x; };
|       using nullary_t = decltype(nullary);
|       using unary_t = decltype(unary);
|       const auto higher1st = [](nullary_t f){ return f(); };
|       const auto higher2nd = [unary](nullary_t f1){
|         return [unary, f1](unary_t f2){ return f2(unary(f1())); };
|       };
|       return higher1st(nullary) + higher2nd(nullary)(unary);
|     }
| 
|   }
| 
|   namespace test_variadic_templates
|   {
| 
|     template <int...>
|     struct sum;
| 
|     template <int N0, int... N1toN>
|     struct sum<N0, N1toN...>
|     {
|       static constexpr auto value = N0 + sum<N1toN...>::value;
|     };
| 
|     template <>
|     struct sum<>
|     {
|       static constexpr auto value = 0;
|     };
| 
|     static_assert(sum<>::value == 0, "");
|     static_assert(sum<1>::value == 1, "");
|     static_assert(sum<23>::value == 23, "");
|     static_assert(sum<1, 2>::value == 3, "");
|     static_assert(sum<5, 5, 11>::value == 21, "");
|     static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, "");
| 
|   }
| 
|   // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae
|   // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function
|   // because of this.
|   namespace test_template_alias_sfinae
|   {
| 
|     struct foo {};
| 
|     template<typename T>
|     using member = typename T::member_type;
| 
|     template<typename T>
|     void func(...) {}
| 
|     template<typename T>
|     void func(member<T>*) {}
| 
|     void test();
| 
|     void test() { func<foo>(0); }
| 
|   }
| 
| }  // namespace cxx11
| 
| #endif  // __cplusplus >= 201103L
| 
| 
| 
| 
| // If the compiler admits that it is not ready for C++14, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201402L
| 
| #error "This is not a C++14 compiler"
| 
| #else
| 
| namespace cxx14
| {
| 
|   namespace test_polymorphic_lambdas
|   {
| 
|     int
|     test()
|     {
|       const auto lambda = [](auto&&... args){
|         const auto istiny = [](auto x){
|           return (sizeof(x) == 1UL) ? 1 : 0;
|         };
|         const int aretiny[] = { istiny(args)... };
|         return aretiny[0];
|       };
|       return lambda(1, 1L, 1.0f, '1');
|     }
| 
|   }
| 
|   namespace test_binary_literals
|   {
| 
|     constexpr auto ivii = 0b0000000000101010;
|     static_assert(ivii == 42, "wrong value");
| 
|   }
| 
|   namespace test_generalized_constexpr
|   {
| 
|     template < typename CharT >
|     constexpr unsigned long
|     strlen_c(const CharT *const s) noexcept
|     {
|       auto length = 0UL;
|       for (auto p = s; *p; ++p)
|         ++length;
|       return length;
|     }
| 
|     static_assert(strlen_c("") == 0UL, "");
|     static_assert(strlen_c("x") == 1UL, "");
|     static_assert(strlen_c("test") == 4UL, "");
|     static_assert(strlen_c("another\0test") == 7UL, "");
| 
|   }
| 
|   namespace test_lambda_init_capture
|   {
| 
|     int
|     test()
|     {
|       auto x = 0;
|       const auto lambda1 = [a = x](int b){ return a + b; };
|       const auto lambda2 = [a = lambda1(x)](){ return a; };
|       return lambda2();
|     }
| 
|   }
| 
|   namespace test_digit_separators
|   {
| 
|     constexpr auto ten_million = 100'000'000;
|     static_assert(ten_million == 100000000, "");
| 
|   }
| 
|   namespace test_return_type_deduction
|   {
| 
|     auto f(int& x) { return x; }
|     decltype(auto) g(int& x) { return x; }
| 
|     template < typename T1, typename T2 >
|     struct is_same
|     {
|       static constexpr auto value = false;
|     };
| 
|     template < typename T >
|     struct is_same<T, T>
|     {
|       static constexpr auto value = true;
|     };
| 
|     int
|     test()
|     {
|       auto x = 0;
|       static_assert(is_same<int, decltype(f(x))>::value, "");
|       static_assert(is_same<int&, decltype(g(x))>::value, "");
|       return x;
|     }
| 
|   }
| 
| }  // namespace cxx14
| 
| #endif  // __cplusplus >= 201402L
| 
| 
| 
| 
| // If the compiler admits that it is not ready for C++17, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201703L
| 
| #error "This is not a C++17 compiler"
| 
| #else
| 
| #include <initializer_list>
| #include <utility>
| #include <type_traits>
| 
| namespace cxx17
| {
| 
|   namespace test_constexpr_lambdas
|   {
| 
|     constexpr int foo = [](){return 42;}();
| 
|   }
| 
|   namespace test::nested_namespace::definitions
|   {
| 
|   }
| 
|   namespace test_fold_expression
|   {
| 
|     template<typename... Args>
|     int multiply(Args... args)
|     {
|       return (args * ... * 1);
|     }
| 
|     template<typename... Args>
|     bool all(Args... args)
|     {
|       return (args && ...);
|     }
| 
|   }
| 
|   namespace test_extended_static_assert
|   {
| 
|     static_assert (true);
| 
|   }
| 
|   namespace test_auto_brace_init_list
|   {
| 
|     auto foo = {5};
|     auto bar {5};
| 
|     static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);
|     static_assert(std::is_same<int, decltype(bar)>::value);
|   }
| 
|   namespace test_typename_in_template_template_parameter
|   {
| 
|     template<template<typename> typename X> struct D;
| 
|   }
| 
|   namespace test_fallthrough_nodiscard_maybe_unused_attributes
|   {
| 
|     int f1()
|     {
|       return 42;
|     }
| 
|     [[nodiscard]] int f2()
|     {
|       [[maybe_unused]] auto unused = f1();
| 
|       switch (f1())
|       {
|       case 17:
|         f1();
|         [[fallthrough]];
|       case 42:
|         f1();
|       }
|       return f1();
|     }
| 
|   }
| 
|   namespace test_extended_aggregate_initialization
|   {
| 
|     struct base1
|     {
|       int b1, b2 = 42;
|     };
| 
|     struct base2
|     {
|       base2() {
|         b3 = 42;
|       }
|       int b3;
|     };
| 
|     struct derived : base1, base2
|     {
|         int d;
|     };
| 
|     derived d1 {{1, 2}, {}, 4};  // full initialization
|     derived d2 {{}, {}, 4};      // value-initialized bases
| 
|   }
| 
|   namespace test_general_range_based_for_loop
|   {
| 
|     struct iter
|     {
|       int i;
| 
|       int& operator* ()
|       {
|         return i;
|       }
| 
|       const int& operator* () const
|       {
|         return i;
|       }
| 
|       iter& operator++()
|       {
|         ++i;
|         return *this;
|       }
|     };
| 
|     struct sentinel
|     {
|       int i;
|     };
| 
|     bool operator== (const iter& i, const sentinel& s)
|     {
|       return i.i == s.i;
|     }
| 
|     bool operator!= (const iter& i, const sentinel& s)
|     {
|       return !(i == s);
|     }
| 
|     struct range
|     {
|       iter begin() const
|       {
|         return {0};
|       }
| 
|       sentinel end() const
|       {
|         return {5};
|       }
|     };
| 
|     void f()
|     {
|       range r {};
| 
|       for (auto i : r)
|       {
|         [[maybe_unused]] auto v = i;
|       }
|     }
| 
|   }
| 
|   namespace test_lambda_capture_asterisk_this_by_value
|   {
| 
|     struct t
|     {
|       int i;
|       int foo()
|       {
|         return [*this]()
|         {
|           return i;
|         }();
|       }
|     };
| 
|   }
| 
|   namespace test_enum_class_construction
|   {
| 
|     enum class byte : unsigned char
|     {};
| 
|     byte foo {42};
| 
|   }
| 
|   namespace test_constexpr_if
|   {
| 
|     template <bool cond>
|     int f ()
|     {
|       if constexpr(cond)
|       {
|         return 13;
|       }
|       else
|       {
|         return 42;
|       }
|     }
| 
|   }
| 
|   namespace test_selection_statement_with_initializer
|   {
| 
|     int f()
|     {
|       return 13;
|     }
| 
|     int f2()
|     {
|       if (auto i = f(); i > 0)
|       {
|         return 3;
|       }
| 
|       switch (auto i = f(); i + 4)
|       {
|       case 17:
|         return 2;
| 
|       default:
|         return 1;
|       }
|     }
| 
|   }
| 
|   namespace test_template_argument_deduction_for_class_templates
|   {
| 
|     template <typename T1, typename T2>
|     struct pair
|     {
|       pair (T1 p1, T2 p2)
|         : m1 {p1},
|           m2 {p2}
|       {}
| 
|       T1 m1;
|       T2 m2;
|     };
| 
|     void f()
|     {
|       [[maybe_unused]] auto p = pair{13, 42u};
|     }
| 
|   }
| 
|   namespace test_non_type_auto_template_parameters
|   {
| 
|     template <auto n>
|     struct B
|     {};
| 
|     B<5> b1;
|     B<'a'> b2;
| 
|   }
| 
|   namespace test_structured_bindings
|   {
| 
|     int arr[2] = { 1, 2 };
|     std::pair<int, int> pr = { 1, 2 };
| 
|     auto f1() -> int(&)[2]
|     {
|       return arr;
|     }
| 
|     auto f2() -> std::pair<int, int>&
|     {
|       return pr;
|     }
| 
|     struct S
|     {
|       int x1 : 2;
|       volatile double y1;
|     };
| 
|     S f3()
|     {
|       return {};
|     }
| 
|     auto [ x1, y1 ] = f1();
|     auto& [ xr1, yr1 ] = f1();
|     auto [ x2, y2 ] = f2();
|     auto& [ xr2, yr2 ] = f2();
|     const auto [ x3, y3 ] = f3();
| 
|   }
| 
|   namespace test_exception_spec_type_system
|   {
| 
|     struct Good {};
|     struct Bad {};
| 
|     void g1() noexcept;
|     void g2();
| 
|     template<typename T>
|     Bad
|     f(T*, T*);
| 
|     template<typename T1, typename T2>
|     Good
|     f(T1*, T2*);
| 
|     static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);
| 
|   }
| 
|   namespace test_inline_variables
|   {
| 
|     template<class T> void f(T)
|     {}
| 
|     template<class T> inline T g(T)
|     {
|       return T{};
|     }
| 
|     template<> inline void f<>(int)
|     {}
| 
|     template<> int g<>(int)
|     {
|       return 5;
|     }
| 
|   }
| 
| }  // namespace cxx17
| 
| #endif  // __cplusplus < 201703L
| 
| 
| 
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 202002L
| 
| #error "This is not a C++20 compiler"
| 
| #else
| 
| #include <version>
| 
| namespace cxx20
| {
| 
| // As C++20 supports feature test macros in the standard, there is no
| // immediate need to actually test for feature availability on the
| // Autoconf side.
| 
| }  // namespace cxx20
| 
| #endif  // __cplusplus < 202002L
| 
| 
| 
configure:7620: result: no
configure:7649: No compiler with C++20 support was found
configure:7659: checking whether C++11 to C++20 testing is enabled
configure:7669: result: no
configure:7690: checking whether g++ supports C++17 features with -std=c++17
configure:8487: g++ -std=c++17 -c -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include conftest.cpp >&5
configure:8487: $? = 0
configure:8497: result: yes
configure:8536: checking whether C++11 to C++17 testing is enabled
configure:8539: result: yes
configure:9448: checking CXXFLAGS to use for testing (PLATCXXFLAGS)
configure:9451: result: -std=c++17
configure:9455: checking if compiler supports pre-compiled headers
configure:9493: result: yes
configure:9550: checking for dlopen in -ldl
configure:9573: gcc -o conftest -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include  conftest.c -ldl   -L/home/yogeshsoni/miniconda3/lib -lpcre2-8 >&5
configure:9573: $? = 0
configure:9583: result: yes
configure:9593: checking for shl_load in -ldld
configure:9616: gcc -o conftest -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include  conftest.c -ldld  -ldl  -L/home/yogeshsoni/miniconda3/lib -lpcre2-8 >&5
/usr/bin/ld: cannot find -ldld
collect2: error: ld returned 1 exit status
configure:9616: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| #define HAVE_CXX17 1
| #define HAVE_LIBDL 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| char shl_load ();
| int
| main (void)
| {
| return shl_load ();
|   ;
|   return 0;
| }
configure:9626: result: no
configure:9637: checking for library containing t_open
configure:9667: gcc -o conftest -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include  conftest.c -ldl  -L/home/yogeshsoni/miniconda3/lib -lpcre2-8 >&5
/usr/bin/ld: /tmp/ccgwPfLt.o: in function `main':
/home/yogeshsoni/jupyter_notebooks/swig-4.1.0/conftest.c:25: undefined reference to `t_open'
collect2: error: ld returned 1 exit status
configure:9667: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| #define HAVE_CXX17 1
| #define HAVE_LIBDL 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| char t_open ();
| int
| main (void)
| {
| return t_open ();
|   ;
|   return 0;
| }
configure:9667: gcc -o conftest -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include  conftest.c -lnsl  -ldl  -L/home/yogeshsoni/miniconda3/lib -lpcre2-8 >&5
/usr/bin/ld: /tmp/ccEwGpAs.o: in function `main':
/home/yogeshsoni/jupyter_notebooks/swig-4.1.0/conftest.c:25: undefined reference to `t_open'
collect2: error: ld returned 1 exit status
configure:9667: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| #define HAVE_CXX17 1
| #define HAVE_LIBDL 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| char t_open ();
| int
| main (void)
| {
| return t_open ();
|   ;
|   return 0;
| }
configure:9687: result: no
configure:9696: checking for library containing gethostbyname
configure:9726: gcc -o conftest -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include  conftest.c -ldl  -L/home/yogeshsoni/miniconda3/lib -lpcre2-8 >&5
configure:9726: $? = 0
configure:9746: result: none required
configure:9755: checking for library containing socket
configure:9785: gcc -o conftest -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include  conftest.c -ldl  -L/home/yogeshsoni/miniconda3/lib -lpcre2-8 >&5
configure:9785: $? = 0
configure:9805: result: none required
configure:9829: checking for main in -lieee
configure:9849: gcc -o conftest -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include  conftest.c -lieee  -ldl  -L/home/yogeshsoni/miniconda3/lib -lpcre2-8 >&5
/usr/bin/ld: cannot find -lieee
collect2: error: ld returned 1 exit status
configure:9849: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| #define HAVE_CXX17 1
| #define HAVE_LIBDL 1
| /* end confdefs.h.  */
| 
| 
| int
| main (void)
| {
| return main ();
|   ;
|   return 0;
| }
configure:9859: result: no
configure:9866: checking for crypt in -lcrypt
configure:9889: gcc -o conftest -g -O2 -Wall -W -pedantic  -I/home/yogeshsoni/miniconda3/include  conftest.c -lcrypt  -ldl  -L/home/yogeshsoni/miniconda3/lib -lpcre2-8 >&5
configure:9889: $? = 0
configure:9899: result: yes
configure:9991: checking for pkg-config
configure:10014: found /usr/bin/pkg-config
configure:10026: result: /usr/bin/pkg-config
configure:10101: checking for android
configure:10136: result: no
configure:10153: checking for adb
configure:10188: result: no
configure:10205: checking for ant
configure:10240: result: no
configure:10257: checking for ndk-build
configure:10292: result: no
configure:10464: checking for mono-csc
configure:10499: result: no
configure:10464: checking for gmcs
configure:10499: result: no
configure:10464: checking for mcs
configure:10499: result: no
configure:10464: checking for cscc
configure:10499: result: no
configure:10729: checking for dmd
configure:10764: result: no
configure:10729: checking for ldmd
configure:10764: result: no
configure:10729: checking for gdmd
configure:10764: result: no
configure:10805: checking for dmd
configure:10840: result: no
configure:10805: checking for gdmd
configure:10840: result: no
configure:10805: checking for ldmd2
configure:10840: result: no
configure:10805: checking for ldc2
configure:10840: result: no
configure:10926: checking for go
configure:10961: result: no
configure:11001: checking for gccgo
configure:11036: result: no
configure:11133: checking for guile-config
configure:11171: result: no
configure:11361: checking for java JDK
configure:11395: result: no (JAVA_HOME is not defined)
configure:11407: checking for java
configure:11442: result: no
configure:11407: checking for kaffe
configure:11442: result: no
configure:11407: checking for guavac
configure:11442: result: no
configure:11463: checking for javac
configure:11498: result: no
configure:11541: checking for java include file jni.h
configure:11584: result: not found
configure:11739: checking for node
configure:11760: found /home/yogeshsoni/.nvm/versions/node/v14.10.0/bin/node
configure:11771: result: node
configure:11789: checking for node-gyp
configure:11824: result: no
configure:11870: checking for JavaScriptCore/Webkit
configure:11889: result: not found
configure:11926: checking for V8 Javascript v8.h
configure:11962: result: not found
configure:11970: checking for V8 Javascript library
configure:11992: result: not found
configure:12089: checking for lua5.4
configure:12127: result: no
configure:12089: checking for lua5.3
configure:12127: result: no
configure:12089: checking for lua5.2
configure:12127: result: no
configure:12089: checking for lua5.1
configure:12127: result: no
configure:12089: checking for lua
configure:12127: result: no
configure:12427: checking for mzscheme
configure:12465: result: no
configure:12477: checking for mzc
configure:12515: result: no
configure:12615: checking for ocamlc
configure:12650: result: no
configure:12666: checking for camlp4
configure:12701: result: no
configure:12717: checking for ocamldlgen
configure:12752: result: no
configure:12768: checking for ocamlfind
configure:12803: result: no
configure:12819: checking for ocamlmktop
configure:12854: result: no
configure:12898: checking for octave-cli
configure:12936: result: no
configure:13126: checking for perl
configure:13147: found /usr/bin/perl
configure:13158: result: perl
configure:13176: checking for Perl5 header files
configure:13185: result: /usr/lib/x86_64-linux-gnu/perl/5.30/CORE
configure:13197: checking for Perl5 library
configure:13204: result: perl
configure:13207: checking for Perl5 ccflags
configure:13214: result: -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
configure:13217: checking for Perl5 ccdlflags
configure:13224: result: -Wl,-E
configure:13227: checking for Perl5 cccdlflags
configure:13234: result: -fPIC
configure:13237: checking for Perl5 ldflags
configure:13244: result:  -fstack-protector-strong -L/usr/local/lib
configure:13247: checking for Perl5 Test::More module
configure:13254: result: found
configure:13310: checking for php8.1
configure:13345: result: no
configure:13310: checking for php8.0
configure:13345: result: no
configure:13310: checking for php7.4
configure:13345: result: no
configure:13310: checking for php7.3
configure:13345: result: no
configure:13310: checking for php7.2
configure:13345: result: no
configure:13310: checking for php7.1
configure:13345: result: no
configure:13310: checking for php7.0
configure:13345: result: no
configure:13310: checking for php
configure:13345: result: no
configure:13422: checking for python
configure:13443: found /home/yogeshsoni/miniconda3/bin/python
configure:13454: result: python
configure:13471: checking for python major version number
configure:13474: result: 3
configure:13479: checking for Python 2.x os.name
configure:13482: result: posix
configure:13484: checking for Python 2.x path separator
configure:13487: result: /
configure:13655: checking for python3
configure:13676: found /home/yogeshsoni/miniconda3/bin/python3
configure:13687: result: python3
configure:13703: checking for python3-config
configure:13724: found /home/yogeshsoni/miniconda3/bin/python3-config
configure:13735: result: python3-config
configure:13804: checking for python3 major version number
configure:13807: result: 3
configure:13815: checking for Python 3.x os.name
configure:13818: result: posix
configure:13820: checking for Python 3.x path separator
configure:13823: result: /
configure:13873: checking for Python 3.x prefix
configure:13876: result: /home/yogeshsoni/miniconda3
configure:13878: checking for Python 3.x exec-prefix
configure:13882: result: /home/yogeshsoni/miniconda3
configure:13888: checking for Python 3.x version
configure:13894: result: python3.9
configure:13899: checking for Python 3.x lib dir
configure:13906: result: lib
configure:13911: checking for Python 3.x header files
configure:13914: result: -I/home/yogeshsoni/miniconda3/include/python3.9 -I/home/yogeshsoni/miniconda3/include/python3.9
configure:13918: checking for Python 3.x library directory
configure:13937: result: /home/yogeshsoni/miniconda3/lib
configure:13943: checking for Python 3.x library
configure:13949: result: -lpython3.9
configure:13979: checking for pycodestyle
configure:14000: found /home/yogeshsoni/miniconda3/bin/pycodestyle
configure:14011: result: pycodestyle
configure:14023: checking pycodestyle version
configure:14026: result: 2.8.0
configure:14058: checking for R
configure:14081: found /home/yogeshsoni/miniconda3/bin/R
configure:14093: result: /home/yogeshsoni/miniconda3/bin/R
configure:14137: checking for ruby
configure:14172: result: no
configure:14184: checking for Ruby header files
configure:14283: result: could not figure out how to run ruby
configure:14333: checking for scilab
configure:14371: result: no
configure:14542: checking for Tcl configuration
configure:14574: result: no
configure:14600: checking for Tcl header files
configure:14608: checking how to run the C preprocessor
configure:14634: gcc -E  -I/home/yogeshsoni/miniconda3/include conftest.c
configure:14634: $? = 0
configure:14649: gcc -E  -I/home/yogeshsoni/miniconda3/include conftest.c
conftest.c:17:10: fatal error: ac_nonexistent.h: No such file or directory
   17 | #include <ac_nonexistent.h>
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
configure:14649: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| #define HAVE_CXX17 1
| #define HAVE_LIBDL 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:14676: result: gcc -E
configure:14690: gcc -E  -I/home/yogeshsoni/miniconda3/include conftest.c
configure:14690: $? = 0
configure:14705: gcc -E  -I/home/yogeshsoni/miniconda3/include conftest.c
conftest.c:17:10: fatal error: ac_nonexistent.h: No such file or directory
   17 | #include <ac_nonexistent.h>
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
configure:14705: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "swig"
| #define PACKAGE_TARNAME "swig"
| #define PACKAGE_VERSION "4.1.0"
| #define PACKAGE_STRING "swig 4.1.0"
| #define PACKAGE_BUGREPORT "https://www.swig.org"
| #define PACKAGE_URL ""
| #define PACKAGE "swig"
| #define VERSION "4.1.0"
| #define SWIG_CXX "g++"
| #define SWIG_PLATFORM "x86_64-pc-linux-gnu"
| #define HAVE_POPEN 1
| #define HAVE_PCRE 1
| #define HAVE_CXX17 1
| #define HAVE_LIBDL 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:14740: gcc -E  -I/home/yogeshsoni/miniconda3/include conftest.c
configure:14740: $? = 0
configure:14759: result: not found
configure:14767: checking for Tcl library
configure:14780: result: not found
configure:15184: checking that generated files are newer than configure
configure:15190: result: done
configure:15217: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by swig config.status 4.1.0, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on trantor461

config.status:1056: creating Makefile
config.status:1056: creating Examples/Makefile
config.status:1056: creating Examples/d/example.mk
config.status:1056: creating Examples/xml/Makefile
config.status:1056: creating Examples/test-suite/errors/Makefile
config.status:1056: creating Examples/test-suite/csharp/Makefile
config.status:1056: creating Examples/test-suite/d/Makefile
config.status:1056: creating Examples/test-suite/go/Makefile
config.status:1056: creating Examples/test-suite/guile/Makefile
config.status:1056: creating Examples/test-suite/java/Makefile
config.status:1056: creating Examples/test-suite/javascript/Makefile
config.status:1056: creating Examples/test-suite/lua/Makefile
config.status:1056: creating Examples/test-suite/mzscheme/Makefile
config.status:1056: creating Examples/test-suite/ocaml/Makefile
config.status:1056: creating Examples/test-suite/octave/Makefile
config.status:1056: creating Examples/test-suite/perl5/Makefile
config.status:1056: creating Examples/test-suite/php/Makefile
config.status:1056: creating Examples/test-suite/python/Makefile
config.status:1056: creating Examples/test-suite/r/Makefile
config.status:1056: creating Examples/test-suite/ruby/Makefile
config.status:1056: creating Examples/test-suite/scilab/Makefile
config.status:1056: creating Examples/test-suite/tcl/Makefile
config.status:1056: creating Source/Makefile
config.status:1056: creating Tools/javascript/Makefile
config.status:1056: creating preinst-swig
config.status:1056: creating CCache/ccache_swig_config.h
config.status:1056: creating Source/Include/swigconfig.h
config.status:1285: executing depfiles commands
config.status:1362: cd Source       && sed -e '/# am--include-marker/d' Makefile         | make -f - am--depfiles
config.status:1367: $? = 0
config.status:1285: executing Examples commands
configure:16649: === configuring in CCache (/home/yogeshsoni/jupyter_notebooks/swig-4.1.0/CCache)
configure:16710: running /bin/bash ./configure --disable-option-checking '--prefix=/home/jupyter_notebooks/swig-4.1.0'  --cache-file=/dev/null --srcdir=.

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-pc-linux-gnu
ac_cv_c_compiler_gnu=yes
ac_cv_cxx_compiler_gnu=yes
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=
ac_cv_env_CXX_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_PCRE2_CFLAGS_set=
ac_cv_env_PCRE2_CFLAGS_value=
ac_cv_env_PCRE2_CONFIG_set=
ac_cv_env_PCRE2_CONFIG_value=
ac_cv_env_PCRE2_LIBS_set=
ac_cv_env_PCRE2_LIBS_value=
ac_cv_env_YACC_set=
ac_cv_env_YACC_value=
ac_cv_env_YFLAGS_set=
ac_cv_env_YFLAGS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_popen=yes
ac_cv_host=x86_64-pc-linux-gnu
ac_cv_lib_crypt_crypt=yes
ac_cv_lib_dl_dlopen=yes
ac_cv_lib_dld_shl_load=no
ac_cv_lib_ieee_main=no
ac_cv_objext=o
ac_cv_path_EGREP='/usr/bin/grep -E'
ac_cv_path_GREP=/usr/bin/grep
ac_cv_path_PCRE2_CONFIG=/home/yogeshsoni/miniconda3/bin/pcre2-config
ac_cv_path_RBIN=/home/yogeshsoni/miniconda3/bin/R
ac_cv_path_SED=/home/yogeshsoni/miniconda3/bin/sed
ac_cv_path_ac_pt_PKG_CONFIG=/usr/bin/pkg-config
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_mkdir=/usr/bin/mkdir
ac_cv_prog_AWK=mawk
ac_cv_prog_CPP='gcc -E'
ac_cv_prog_NODEJS=node
ac_cv_prog_PERL=perl
ac_cv_prog_PY3CONFIG=python3-config
ac_cv_prog_PYCODESTYLE=pycodestyle
ac_cv_prog_PYTHON3=python3
ac_cv_prog_PYTHON=python
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_CXX=g++
ac_cv_prog_cc_c11=
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=
ac_cv_prog_cxx_11=no
ac_cv_prog_cxx_cxx11=
ac_cv_prog_cxx_g=yes
ac_cv_prog_cxx_stdcxx=
ac_cv_prog_make_make_set=yes
ac_cv_search_gethostbyname='none required'
ac_cv_search_socket='none required'
ac_cv_search_t_open=no
am_cv_CC_dependencies_compiler_type=gcc3
am_cv_CXX_dependencies_compiler_type=gcc3
am_cv_make_support_nested_variables=yes
am_cv_prog_cc_c_o=yes
ax_cv_cxx_compile_cxx17__std_cpp17=yes
ax_cv_cxx_compile_cxx20__h_std_cpp20=no
ax_cv_cxx_compile_cxx20__std_cpp20=no
ax_cv_cxx_compile_cxx20_pstd_cpp20=no

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} '\''/home/yogeshsoni/jupyter_notebooks/swig-4.1.0/Tools/config/missing'\'' aclocal-1.16'
ADB=''
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='$${TAR-tar}'
AM_BACKSLASH='\'
AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
AM_DEFAULT_VERBOSITY='1'
AM_V='$(V)'
ANDROID=''
ANT=''
AUTOCONF='${SHELL} '\''/home/yogeshsoni/jupyter_notebooks/swig-4.1.0/Tools/config/missing'\'' autoconf'
AUTOHEADER='${SHELL} '\''/home/yogeshsoni/jupyter_notebooks/swig-4.1.0/Tools/config/missing'\'' autoheader'
AUTOMAKE='${SHELL} '\''/home/yogeshsoni/jupyter_notebooks/swig-4.1.0/Tools/config/missing'\'' automake-1.16'
AWK='mawk'
BOOST_CPPFLAGS='-I/include/boost-0'
BOOST_LDFLAGS='-L/lib64'
CAMLP4=''
CC='gcc'
CCDEPMODE='depmode=gcc3'
CCSHARED='-fpic'
CFLAGS='-g -O2 -Wall -W -pedantic'
CPP='gcc -E'
CPPFLAGS=' -I/home/yogeshsoni/miniconda3/include'
CSCOPE='cscope'
CSHARPCFLAGS=''
CSHARPCILINTERPRETER=''
CSHARPCILINTERPRETER_FLAGS=''
CSHARPCOMPILER=''
CSHARPCONVERTPATH='Tools/convertpath -u'
CSHARPDYNAMICLINKING=''
CSHARPLIBRARYPREFIX='lib'
CSHARPSO='.so'
CTAGS='ctags'
CXX='g++'
CXXDEPMODE='depmode=gcc3'
CXXFLAGS='-g -O2 -Wall -W -pedantic'
CXXSHARED='$(CC) -shared'
CYGPATH_W='echo'
D1COMPILER=''
D2COMPILER=''
DDEFAULTVERSION=''
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
DLIBPREFIX='lib'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/usr/bin/grep -E'
ENABLE_CCACHE='1'
ETAGS='etags'
EXEEXT=''
EXTRA_CLEAN=''
GCCGO=''
GCCGOOPT=''
GO12=''
GO13=''
GO15=''
GO1=''
GO=''
GOC=''
GOGCC='false'
GOOPT=''
GOVERSIONOPTION=''
GREP='/usr/bin/grep'
GUILE='yes'
GUILE_CFLAGS=''
GUILE_CONFIG=''
GUILE_LIBS=''
GUILE_SO='.so'
HAVE_CXX11='1'
HAVE_CXX14='1'
HAVE_CXX17='1'
HAVE_CXX20='0'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
JAVA=''
JAVAC=''
JAVACFLAGS=''
JAVACXXSHARED='$(CXXSHARED)'
JAVADYNAMICLINKING=''
JAVAFLAGS=''
JAVAINC=''
JAVALDSHARED='$(LDSHARED)'
JAVALIBRARYPREFIX='lib'
JAVASO='.so'
JAVA_CLASSPATH_SEP=':'
JAVA_SKIP_DOXYGEN_TEST_CASES=''
JSCENABLED=''
JSCOREDYNAMICLINKING=''
JSCOREINC=''
JSCOREVERSION=''
JSINTERPRETERCXX='$(CXX)'
JSINTERPRETERLINKFLAGS='-ldl'
JSV8DYNAMICLINKING=''
JSV8ENABLED=''
JSV8INC=''
LDFLAGS=''
LDSHARED='$(CC) -shared'
LIBC=''
LIBCRYPT='-lcrypt'
LIBM='-lm'
LIBOBJS=''
LIBS='-ldl  -L/home/yogeshsoni/miniconda3/lib -lpcre2-8'
LINKFORSHARED='-Xlinker -export-dynamic'
LTLIBOBJS=''
LUABIN=''
LUADYNAMICLINKING=''
LUAFLAGS=''
LUALINK=''
LUA_SO='.so'
MAKEINFO='${SHELL} '\''/home/yogeshsoni/jupyter_notebooks/swig-4.1.0/Tools/config/missing'\'' makeinfo'
MKDIR_P='/usr/bin/mkdir -p'
MZC=''
MZDYNOBJ=''
MZSCHEME=''
MZSCHEME_SO='.so'
NDKBUILD=''
NODEGYP=''
NODEJS=''
OBJEXT='o'
OCAMLC=''
OCAMLDLGEN=''
OCAMLFIND=''
OCAMLMKTOP=''
OCTAVE=''
OCTAVE_CPPFLAGS=''
OCTAVE_CXXFLAGS=''
OCTAVE_LDFLAGS=''
OCTAVE_SO='.oct'
PACKAGE='swig'
PACKAGE_BUGREPORT='https://www.swig.org'
PACKAGE_NAME='swig'
PACKAGE_STRING='swig 4.1.0'
PACKAGE_TARNAME='swig'
PACKAGE_URL=''
PACKAGE_VERSION='4.1.0'
PATH_SEPARATOR=':'
PCHINCLUDEARG='-include'
PCHINCLUDEEXT=''
PCHSUPPORT='yes'
PCRE2_CFLAGS='-I/home/yogeshsoni/miniconda3/include'
PCRE2_CONFIG='/home/yogeshsoni/miniconda3/bin/pcre2-config'
PCRE2_LIBS='-L/home/yogeshsoni/miniconda3/lib -lpcre2-8'
PERL5CCCDLFLAGS='-fPIC'
PERL5CCDLFLAGS='-Wl,-E'
PERL5CCFLAGS='-D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'
PERL5DYNAMICLINKING=''
PERL5EXT='/usr/lib/x86_64-linux-gnu/perl/5.30/CORE'
PERL5LDFLAGS=' -fstack-protector-strong -L/usr/local/lib'
PERL5LIB='perl'
PERL='perl'
PHP=''
PHPINC=''
PHP_SO='.so'
PKG_CONFIG='/usr/bin/pkg-config'
PLATCFLAGS=''
PLATCXXFLAGS='-std=c++17'
PY3CONFIG='python3-config'
PY3INCLUDE='-I/home/yogeshsoni/miniconda3/include/python3.9 -I/home/yogeshsoni/miniconda3/include/python3.9'
PY3LIB='/home/yogeshsoni/miniconda3/lib'
PY3LINK='-lpython3.9'
PYCODESTYLE='pycodestyle'
PYINCLUDE=''
PYLIB=''
PYLINK=''
PYTHON3='python3'
PYTHON3DYNAMICLINKING=''
PYTHON='python'
PYTHONDYNAMICLINKING=''
PYTHON_SO='.so'
RBIN='/home/yogeshsoni/miniconda3/bin/R'
ROOT_DIR='/home/yogeshsoni/jupyter_notebooks/swig-4.1.0'
RPATH='-Xlinker -rpath $(exec_prefix)/lib -Xlinker -rpath .'
RUBY=''
RUBYCCDLFLAGS=''
RUBYDYNAMICLINKING=''
RUBYINCLUDE=''
RUBYLIB=''
RUBYLINK=''
RUBYSO='.so'
SCILAB=''
SCILABINCLUDE=''
SCILABOPT=''
SCILAB_VERSION=''
SED='/home/yogeshsoni/miniconda3/bin/sed'
SET_MAKE=''
SHELL='/bin/bash'
SKIP_ANDROID='1'
SKIP_CSHARP='1'
SKIP_D='1'
SKIP_GO='1'
SKIP_GUILE='1'
SKIP_JAVA='1'
SKIP_JAVASCRIPT='1'
SKIP_LUA='1'
SKIP_MZSCHEME='1'
SKIP_OCAML='1'
SKIP_OCTAVE='1'
SKIP_PERL5=''
SKIP_PHP='1'
SKIP_PYTHON3=''
SKIP_PYTHON=''
SKIP_R=''
SKIP_RUBY='1'
SKIP_SCILAB='1'
SKIP_TCL='1'
SO='.so'
STRIP=''
SWIG_LIB='/home/jupyter_notebooks/swig-4.1.0/share/swig/4.1.0'
SWIG_LIB_INSTALL='${datarootdir}/swig/4.1.0'
SWIG_LIB_PREINST='/home/yogeshsoni/jupyter_notebooks/swig-4.1.0/Lib'
SWIG_LIB_SET='env SWIG_LIB=$(SWIG_LIB_DIR)'
TCLCXXSHARED='$(CXXSHARED)'
TCLDYNAMICLINKING=''
TCLINCLUDE=''
TCLLDSHARED='$(LDSHARED)'
TCLLIB=''
TCLLINK=''
TCL_SO='.so'
TRYLINKINGWITHCXX='CXXSHARED= $(CXX) -shared '
VERSION='4.1.0'
YACC='yacc'
YFLAGS=''
ac_aux_dir='./Tools/config/'
ac_ct_CC='gcc'
ac_ct_CXX='g++'
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCC_FALSE='#'
am__fastdepCC_TRUE=''
am__fastdepCXX_FALSE='#'
am__fastdepCXX_TRUE=''
am__include='include'
am__isrc=''
am__leading_dot='.'
am__nodep='_no'
am__quote=''
am__tar='$${TAR-tar} chof - "$$tardir"'
am__untar='$${TAR-tar} xf -'
bindir='${exec_prefix}/bin'
build='x86_64-pc-linux-gnu'
build_alias=''
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='pc'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-pc-linux-gnu'
host_alias=''
host_cpu='x86_64'
host_os='linux-gnu'
host_vendor='pc'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /home/yogeshsoni/jupyter_notebooks/swig-4.1.0/Tools/config/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='$(MKDIR_P)'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/home/jupyter_notebooks/swig-4.1.0'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
subdirs=' CCache'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "swig"
#define PACKAGE_TARNAME "swig"
#define PACKAGE_VERSION "4.1.0"
#define PACKAGE_STRING "swig 4.1.0"
#define PACKAGE_BUGREPORT "https://www.swig.org"
#define PACKAGE_URL ""
#define PACKAGE "swig"
#define VERSION "4.1.0"
#define SWIG_CXX "g++"
#define SWIG_PLATFORM "x86_64-pc-linux-gnu"
#define HAVE_POPEN 1
#define HAVE_PCRE 1
#define HAVE_CXX17 1
#define HAVE_LIBDL 1
#define SWIG_LIB "/home/jupyter_notebooks/swig-4.1.0/share/swig/4.1.0"
#define SWIG_LIB_WIN_UNIX ""

configure: exit 0
